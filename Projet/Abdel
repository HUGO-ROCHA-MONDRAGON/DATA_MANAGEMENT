gdata = GetData(tickers, start_date, end_date)
madata=gdata.main_data_frame()#on cree le dataframe avec TOUS les actifs TOUTE la periode
#il manquerait le traitement des datas
print(madata)


#à mettre dasns le main

gdata = GetData(tickers, start_date, end_date)
madata=gdata.main_data_frame()#on cree le dataframe avec TOUS les actifs TOUTE la periode
#il manquerait le traitement des datas
print(madata)

#à mettre dasns le main

def strategy_low_risk(self):
    print("Running LOW_RISK strategy...")
    conn = sqlite3.connect(self.db_file)
    cursor = conn.cursor()
    risk_type = "LOW_RISK"

    # Étape 1 : Quantités initiales
    quantites = {}
    query = "SELECT TICKER, QUANTITY FROM Portfolios WHERE RISK_TYPE = ?"
    cursor.execute(query, (risk_type,))
    for ticker, qte in cursor.fetchall():
        quantites[ticker] = qte

    # Étape 2 : Données depuis la table Products
    df_sql = pd.read_sql_query("SELECT IMPORT_DATE, TICKER, PRICE FROM Products", conn)
    df = df_sql.pivot(index='IMPORT_DATE', columns='TICKER', values='PRICE').reset_index()

    historique = []

    for ticker in df.columns[1:]:
        cursor.execute("""
            SELECT MANAGER_ID, ROWID FROM Portfolios
            WHERE TICKER = ? AND RISK_TYPE = ?
        """, (ticker, risk_type))
        result = cursor.fetchone()
        if result:
            manager_id, portfolio_id = result
            df[f"rend_{ticker}"] = None
            for i in range(6, len(df), 7):  # tous les 7 jours (1er rendement à la 7e ligne)
                price_today = df[ticker].iloc[i]
                price_7_days_ago = df[ticker].iloc[i - 6]
                rendement = (price_today - price_7_days_ago) / price_7_days_ago
                df.loc[df.index[i], f"rend_{ticker}"] = rendement

            rendements = df[f"rend_{ticker}"].dropna().tolist()
            quantite = quantites.get(ticker, 50)

            for j, r in enumerate(rendements):
                variation = quantite * r
                quantite += variation
                spot = df.loc[df.index[j * 7 + 6], ticker]
                trade_date = df.loc[df.index[j * 7 + 6], "IMPORT_DATE"]
                trade_type = "Buy" if variation > 0 else "Sell"

                historique.append({
                    "TICKER": ticker,
                    "spot": round(spot, 2),
                    "Rendement": round(r, 4),
                    "Variation_stock": int(variation),
                    "Quantité_totale": int(quantite),
                    "depense/revenu": round(-variation * spot, 2),
                    "trade": trade_type,
                    "trade_date": trade_date
                })

    conn.close()
    df_resultat = pd.DataFrame(historique)
    print(df_resultat)
    return df_resultat


